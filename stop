#!/bin/sh

set -v
cd ~/eth2-beaconchain-explorer/local-deployment/

set +v
echo "==============================================================="
echo "What strength do you need?"
echo "Most of the time, 1 is enough. If Kurtosis or Docker gives you"
echo "errors that you cannot explain, try to clean at level 2. If it"
echo "doesn't solve your weird problem, try level 3."
echo "USE LEVEL 4 IN LAST RESORT ONLY. Please read the script before"
echo "trying level 4! To completely achieve level 4, you might need"
echo "to do it twice."
read -p "1/2/3/4 ?  " strength
echo "==============================================================="

# yes, I could use if statements and functions, but I prefer readability for this critical script:

case $strength in
    4) set -v
       sudo aa-remove-unknown
       sudo apparmor_parser -r /etc/apparmor.d/*snap-confine*
       sudo apparmor_parser -r /var/lib/snapd/apparmor/profiles/snap-confine*
       sudo apparmor_parser -r /var/lib/snapd/apparmor/profiles/*
       sudo systemctl daemon-reload
       sudo systemctl enable --now apparmor.service
       sudo systemctl enable --now snapd.apparmor.service
       sudo snap refresh --stable chromium
       sudo snap refresh --stable firefox
       sudo snap refresh --stable docker
       set +v
       ;;
esac

case $strength in
    4|3|2) set -v
           kurtosis enclave rm -f my-testnet
           sudo docker rm -f $(docker ps -qa)
           sudo docker compose down
           kurtosis engine stop
           sudo docker network rm -f kt-my-testnet
           set +v
           ;;
        *) set -v
           docker compose down
           kurtosis engine stop
           set +v
           ;;
esac

case $strength in
    4|3) set -v
         sudo docker system prune --volumes -a -f
         set +v
         ;;
esac

